<script>
/**********************
* DATALAYER ARCHITECTURE: SHOPIFY 
* DEFINITION: A data layer helps you collect more accurate analytics data, that in turn allows you to better understand what potential buyers are doing on your website and where you can make improvements. It also reduces the time to implement marketing tags on a website, and reduces the need for IT involvement, leaving them to get on with implementing new features and fixing bugs.

* RESOURCES:
* http://www.datalayerdoctor.com/a-gentle-introduction-to-the-data-layer-for-digital-marketers/
* http://www.simoahava.com/analytics/data-layer/

* EXTERNAL DEPENDENCIES:
* jQuery
* jQuery Cookie Plugin v1.4.1 - https://github.com/carhartl/jquery-cookie
* cartjs - https://github.com/discolabs/cartjs

* DataLayer Architecture: Shopify v1.2
* COPYRIGHT 2021
* LICENSES: MIT ( https://opensource.org/licenses/MIT )
*/

/**********************
* PRELOADS 
* load jquery if it doesn't exist
***********************/ 

if(!window.jQuery){
    var jqueryScript = document.createElement('script');
    jqueryScript.setAttribute('src','https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.1/jquery.min.js'); 
    document.head.appendChild(jqueryScript); 
}

__DL__jQueryinterval = setInterval(function(){
    // wait for jQuery to load & run script after jQuery has loaded
    if(window.jQuery){
        // search parameters
        getURLParams = function(name, url){
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        };
        
        /**********************
        * DYNAMIC DEPENDENCIES
        ***********************/
        __DL__ = {
            dynamicCart: true,  // if cart is dynamic (meaning no refresh on cart add) set to true
            debug: false, // if true, console messages will be displayed
            cart: null,
            wishlist: null,
            removeCart: null
        };
        
        customBindings = {
            cartTriggers: [],
            viewCart: [],
            removeCartTrigger: [],
            cartVisableSelector: [],
            promoSubscriptionsSelectors: [],
            promoSuccess: [],
            ctaSelectors: [],
            newsletterSelectors: [],
            newsletterSuccess: [],
            searchPage: [],
            wishlistSelector: [],
            removeWishlist: [],
            wishlistPage: [],
            searchTermQuery: [getURLParams('q')], // replace var with correct query
        };
        
        /* DO NOT EDIT */
        defaultBindings = {
            cartTriggers: ['form[action="/cart/add"] [type="submit"],.add-to-cart,.cart-btn'],
            viewCart: ['form[action="/cart"],.my-cart,.trigger-cart,#mobileCart'],
            removeCartTrigger: ['[href*="/cart/change"]'],
            cartVisableSelector: ['.inlinecart.is-active,.inline-cart.is-active'],
            promoSubscriptionsSelectors: [],
            promoSuccess: [],
            ctaSelectors: [],
            newsletterSelectors: ['input.contact_email'],
            newsletterSuccess: ['.success_message'],
            searchPage: ['search'],
            wishlistSelector: [],
            removeWishlist: [],
            wishlistPage: []
        };
        
        // stitch bindings
        objectArray = customBindings;
        outputObject = __DL__;
        
        applyBindings = function(objectArray, outputObject){
            for (var x in objectArray) {  
                var key = x;
                var objs = objectArray[x]; 
                values = [];    
                if(objs.length > 0){    
                    values.push(objs);
                    if(key in outputObject){              
                        values.push(outputObject[key]); 
                        outputObject[key] = values.join(", "); 
                    }else{        
                        outputObject[key] = values.join(", ");
                    }   
                }  
            }
        };
        
        applyBindings(customBindings, __DL__);
        applyBindings(defaultBindings, __DL__);
        
        /**********************
        * PREREQUISITE LIBRARIES 
        ***********************/
        
        clearInterval(__DL__jQueryinterval);
        
       // jquery-cookies.js
        if(typeof $.cookie!==undefined){(function(a){if(typeof define==='function'&&define.amd){define(['jquery'],a)}else if(typeof exports==='object'){module.exports=a(require('jquery'))}else{a(jQuery)}}(function($){var g=/\+/g;function encode(s){return h.raw?s:encodeURIComponent(s)}function decode(s){return h.raw?s:decodeURIComponent(s)}function stringifyCookieValue(a){return encode(h.json?JSON.stringify(a):String(a))}function parseCookieValue(s){if(s.indexOf('"')===0){s=s.slice(1,-1).replace(/\\"/g,'"').replace(/\\\\/g,'\\')}try{s=decodeURIComponent(s.replace(g,' '));return h.json?JSON.parse(s):s}catch(e){}}function read(s,a){var b=h.raw?s:parseCookieValue(s);return $.isFunction(a)?a(b):b}var h=$.cookie=function(a,b,c){if(arguments.length>1&&!$.isFunction(b)){c=$.extend({},h.defaults,c);if(typeof c.expires==='number'){var d=c.expires,t=c.expires=new Date();t.setMilliseconds(t.getMilliseconds()+d*864e+5)}return(document.cookie=[encode(a),'=',stringifyCookieValue(b),c.expires?'; expires='+c.expires.toUTCString():'',c.path?'; path='+c.path:'',c.domain?'; domain='+c.domain:'',c.secure?'; secure':''].join(''))}var e=a?undefined:{},cookies=document.cookie?document.cookie.split('; '):[],i=0,l=cookies.length;for(;i<l;i++){var f=cookies[i].split('='),name=decode(f.shift()),cookie=f.join('=');if(a===name){e=read(cookie,b);break}if(!a&&(cookie=read(cookie))!==undefined){e[name]=cookie}}return e};h.defaults={};$.removeCookie=function(a,b){$.cookie(a,'',$.extend({},b,{expires:-1}));return!$.cookie(a)}}))}
        
        /**********************
        * Begin dataLayer Build 
        ***********************/
        
        window.dataLayer = window.dataLayer || [];  // init data layer if doesn't already exist
        // dataLayer.push({'event': 'Begin DataLayer'}); // begin datalayer
        
        var template = "{{template}}"; 
        
        /** 
        * Log State Cookie */
        
        {% if customer %}
        var isLoggedIn = true;
        {% else %}
        var isLoggedIn = false;
        {% endif %}
        if (!isLoggedIn) {
            $.cookie('logState', unescape);
            $.removeCookie('logState', {path: '/'});
            $.cookie('logState', 'loggedOut', {path: '/'});
        } else {
            if ($.cookie('logState') === 'loggedOut' || $.cookie('logState') === undefined) {
                $.cookie('logState', unescape);
                $.removeCookie('logState', {path: '/'});
                $.cookie('logState', 'firstLog', {path: '/'});
            } else if ($.cookie('logState') === 'firstLog') {
                $.cookie('logState', unescape);
                $.removeCookie('logState', {path: '/'});
                $.cookie('logState', 'refresh', {path: '/'});
            }
        }
        
        if ($.cookie('logState') === 'firstLog') {
            var firstLog = true;
        } else {
            var firstLog = false;
        }
        
        /** 
        * DATALAYER: Log State
        * 1. Determine if user is logged in or not.
        * 2. Return User specific data. */
        
        var logState = {
            'ecommerce': {
                {% if shop.customer_accounts_enabled %}
                {% if customer %}
                'userId'        : {{customer.id | json}},
                'customerEmail' : {{customer.email | json}},
                'logState'      : "Logged In",
                'customerInfo'  : {
                    'firstName'   : {{customer_address.first_name | json}},
                    'lastName'    : {{customer_address.last_name | json}},
                    'address1'    : {{customer_address.address1 | json}},
                    'address2'    : {{customer_address.address2 | json}},
                    'street'      : {{customer_address.street | json}},
                    'city'        : {{customer_address.city | json}},
                    'province'    : {{customer_address.province | json}},
                    'zip'         : {{customer_address.zip | json}},
                    'country'     : {{customer_address.country | json}},
                    'phone'       : {{customer_address.phone | json}},
                    'totalOrders' : {{customer.orders_count | json}},
                    'totalSpent'  : {{customer.total_spent | money_without_currency | remove: "," | json}}
                },
                {% else %}
                'logState' : "Logged Out",
                {% endif %}
                {% endif %}
                'firstLog'      : firstLog,
                'customerEmail' : {{customer.email | json}},
                'timestamp'     : Date.now(),  
                {% if customer.orders_count > 2 %}
                'customerType'       : 'Returning',
                'customerTypeNumber' : '0',
                {% else %}
                'customerType'       : 'New',
                'customerTypeNumber' :'1', 
                {% endif %}
                'shippingInfo' : {
                    'fullName'  : {{checkout.shipping_address.name | json}},
                    'firstName' : {{checkout.shipping_address.first_name | json}},
                    'lastName'  : {{checkout.shipping_address.last_name | json}},
                    'address1'  : {{checkout.shipping_address.address1 | json}},
                    'address2'  : {{checkout.shipping_address.address2 | json}},
                    'street'    : {{checkout.shipping_address.street | json}},
                    'city'      : {{checkout.shipping_address.city | json}},
                    'province'  : {{checkout.shipping_address.province | json}},
                    'zip'       : {{checkout.shipping_address.zip | json}},
                    'country'   : {{checkout.shipping_address.country | json}},
                    'phone'     : {{checkout.shipping_address.phone | json}},
                },
                'billingInfo' : {
                    'fullName'  : {{checkout.billing_address.name | json}},
                    'firstName' : {{checkout.billing_address.first_name | json}},
                    'lastName'  : {{checkout.billing_address.last_name | json}},
                    'address1'  : {{checkout.billing_address.address1 | json}},
                    'address2'  : {{checkout.billing_address.address2 | json}},
                    'street'    : {{checkout.billing_address.street | json}},
                    'city'      : {{checkout.billing_address.city | json}},
                    'province'  : {{checkout.billing_address.province | json}},
                    'zip'       : {{checkout.billing_address.zip | json}},
                    'country'   : {{checkout.billing_address.country | json}},
                    'phone'     : {{checkout.billing_address.phone | json}},
                },
                'checkoutEmail' : {{checkout.email | json}},
                'currency'      : {{shop.currency | json}},
                'pageType'      : 'Log State',
                'event'         : 'Log State'
            }
        }
        if (!(template.match(/.*product.*/gi) && !template.match(/.*collection.*/gi))) {
            dataLayer.push(logState);
        }
        if(__DL__.debug){
            console.log("Log State"+" :"+JSON.stringify(logState, null, " "));
        }
        
            /** DATALAYER: Product Page
            * Fire on all Product View pages. */
            /// ADD_TO_CART
            if (template.match(/.*product.*/gi) && !template.match(/.*collection.*/gi)) {
                
                sku = '';
                var product = {
                    'ecommerce': {
                        {% if shop.customer_accounts_enabled %}
                        {% if customer %}
                        'userId'        : {{customer.id | json}},
                        'customerEmail' : {{customer.email | json}},
                        'logState'      : "Logged In",
                        'customerInfo'  : {
                            'firstName'   : {{customer_address.first_name | json}},
                            'lastName'    : {{customer_address.last_name | json}},
                            'address1'    : {{customer_address.address1 | json}},
                            'address2'    : {{customer_address.address2 | json}},
                            'street'      : {{customer_address.street | json}},
                            'city'        : {{customer_address.city | json}},
                            'province'    : {{customer_address.province | json}},
                            'zip'         : {{customer_address.zip | json}},
                            'country'     : {{customer_address.country | json}},
                            'phone'       : {{customer_address.phone | json}},
                            'totalOrders' : {{customer.orders_count | json}},
                            'totalSpent'  : {{customer.total_spent | money_without_currency | remove: "," | json}}
                        },
                        {% else %}
                        'logState' : "Logged Out",
                        {% endif %}
                        {% endif %}
                        'firstLog'      : firstLog,
                        'customerEmail' : {{customer.email | json}},
                        'timestamp'     : Date.now(),  
                        {% if customer.orders_count > 2 %}
                        'customerType'       : 'Returning',
                        'customerTypeNumber' : '0',
                        {% else %}
                        'customerType'       : 'New',
                        'customerTypeNumber' :'1', 
                        {% endif %}
                        'shippingInfo' : {
                            'fullName'  : {{checkout.shipping_address.name | json}},
                            'firstName' : {{checkout.shipping_address.first_name | json}},
                            'lastName'  : {{checkout.shipping_address.last_name | json}},
                            'address1'  : {{checkout.shipping_address.address1 | json}},
                            'address2'  : {{checkout.shipping_address.address2 | json}},
                            'street'    : {{checkout.shipping_address.street | json}},
                            'city'      : {{checkout.shipping_address.city | json}},
                            'province'  : {{checkout.shipping_address.province | json}},
                            'zip'       : {{checkout.shipping_address.zip | json}},
                            'country'   : {{checkout.shipping_address.country | json}},
                            'phone'     : {{checkout.shipping_address.phone | json}},
                        },
                        'billingInfo' : {
                            'fullName'  : {{checkout.billing_address.name | json}},
                            'firstName' : {{checkout.billing_address.first_name | json}},
                            'lastName'  : {{checkout.billing_address.last_name | json}},
                            'address1'  : {{checkout.billing_address.address1 | json}},
                            'address2'  : {{checkout.billing_address.address2 | json}},
                            'street'    : {{checkout.billing_address.street | json}},
                            'city'      : {{checkout.billing_address.city | json}},
                            'province'  : {{checkout.billing_address.province | json}},
                            'zip'       : {{checkout.billing_address.zip | json}},
                            'country'   : {{checkout.billing_address.country | json}},
                            'phone'     : {{checkout.billing_address.phone | json}},
                        },
                        'checkoutEmail' : {{checkout.email | json}},
                        'currency'      : {{shop.currency | json}},
                        'pageType'      : 'Log State',
                        'event'         : 'Log State',
                        'price'           : {{product.price | money_without_currency | remove: "," | json}},
                        'items': [{
                            'item_sku'             : {{product.selected_or_first_available_variant.sku | json}},
                            'item_variantId'       : {{product.selected_or_first_available_variant.id | json}},
                            'productType'     : {{product.type | json}},
                            'item_name'            : {{product.title | json}},
                            'price'           : {{product.price | money_without_currency | remove: "," | json}},
                            'description'     : {{product.description | strip_newlines | strip_html | json}},
                            'imageURL'        : "https:{{product.featured_image.src|img_url:'grande'}}", 
                            'productURL'      : '{{shop.secure_url}}{{product.url}}',
                            'brand'           : {{shop.name | json}},              
                            'comparePrice'    : {{product.compare_at_price_max | money_without_currency | remove: "," | json}},
                            'item_categories'      : {{product.collections | map:"title" | json}},
                            'currentCategory' : {{collection.title | json}},
                            'productOptions'  : {
                                {% for option in product.options_with_values %}
                                {% for value in option.values %}
                                {% if option.selected_value == value %}
                                {{option.name | json}} : {{value | json}},
                                {% endif %}
                                {% endfor %}
                                {% endfor %}
                            }
                        }]
                    }
                };
                function productView(){
                    var sku = {{product.selected_or_first_available_variant.sku | json}};
                    dataLayer.push(product, {
                        'pageType' : 'Product',
                        'event'    : 'view_item'});
                        if(__DL__.debug){
                            console.log("Product"+" :"+JSON.stringify(product, null, " "));
                        }
                    }
                    productView();
                    
                    $(__DL__.cartTriggers).click(function(){
                        var skumatch = {{product.selected_or_first_available_variant.sku | json}};
                        if(sku != skumatch){
                            productView();
                        }
                    });
                }
                /** 
                * DATALAYER Variable
                * Checkout & Transaction Data */
                transactionData = {
                    'ecommerce': {
                        'transactionNumber'      : {{checkout.order_id | json}},
                        'transactionId'          : {{checkout.order_number | json}},
                        'transactionAffiliation' : {{shop.name | json}},
                        'transactionTotal'       : {{checkout.total_price | money_without_currency| remove: "," | json}},
                        'transactionTax'         : {{checkout.tax_price | money_without_currency| remove: "," | json}},
                        'transactionShipping'    : {{checkout.shipping_price | money_without_currency| remove: "," | json}},
                        'transactionSubtotal'    : {{checkout.subtotal_price | money_without_currency| remove: "," | json}},
                        {% for discount in checkout.discounts %}
                        'promoCode' : {{discount.code | json}},
                        'discount'  : {{discount.amoun t | money_without_currency | json}},
                        {% endfor %}
                    }
                };
                if(__DL__.debug == true){
                    
                    /** DATALAYER: Transaction */
                    if(document.location.pathname.match(/.*order.*/g)||document.location.pathname.match(/.*thank\_you.*/g)){
                        dataLayer.push(transactionData,{
                            'pageType' :'Purchase',
                            'event'    :'purchase'
                        });       
                        console.log("Transaction Data"+" :"+JSON.stringify(transactionData, null, " "));
                    }
                }
                
                /** DATALAYER: Checkout */
                if(Shopify.Checkout){
                    if(Shopify.Checkout.step){ 
                        if(Shopify.Checkout.step.length > 0){
                            if (Shopify.Checkout.step === 'contact_information'){
                                dataLayer.push(transactionData,{
                                    'event'    :'begin_checkout',
                                    'pageType' :'Customer Information'});
                                    console.log("Customer Information - Transaction Data"+" :"+JSON.stringify(transactionData, null, " "));
                                }else if (Shopify.Checkout.step === 'shipping_method'){
                                    dataLayer.push(transactionData,{
                                        'event'    :'add_shipping_info',
                                        'pageType' :'Shipping Information'});
                                        console.log("Shipping - Transaction Data"+" :"+JSON.stringify(transactionData, null, " "));
                                    }else if( Shopify.Checkout.step === "payment_method" ){
                                        dataLayer.push(transactionData,{
                                            'event'    :'add_payment_info',
                                            'pageType' :'Add Payment Info'});
                                            console.log("Payment - Transaction Data"+" :"+JSON.stringify(transactionData, null, " "));
                                        }
                                    }
                                    
                                    if(__DL__.debug == true){
                                        /** DATALAYER: Transaction */
                                        if(Shopify.Checkout.page == "thank_you"){
                                            dataLayer.push(transactionData,{
                                                'pageType' :'Purchase',
                                                'event'    :'purchase'
                                            });       
                                            console.log("Transaction Data"+" :"+JSON.stringify(transactionData, null, " "));  
                                        }
                                    }else{
                                        /** DATALAYER: Transaction */
                                        if(Shopify.Checkout.page == "thank_you"){
                                            dataLayer.push(transactionData,{
                                                'pageType' :'Purchase',
                                                'event'    :'purchase'
                                            });
                                        }
                                    }
                                }
                            }
                            {% if template contains 'cart' %}
                            var logState = {
                                    'ecommerce': {
                                        {% if shop.customer_accounts_enabled %}
                                        {% if customer %}
                                        'userId'        : {{customer.id | json}},
                                        'customerEmail' : {{customer.email | json}},
                                        'logState'      : "Logged In",
                                        'customerInfo'  : {
                                            'firstName'   : {{customer_address.first_name | json}},
                                            'lastName'    : {{customer_address.last_name | json}},
                                            'address1'    : {{customer_address.address1 | json}},
                                            'address2'    : {{customer_address.address2 | json}},
                                            'street'      : {{customer_address.street | json}},
                                            'city'        : {{customer_address.city | json}},
                                            'province'    : {{customer_address.province | json}},
                                            'zip'         : {{customer_address.zip | json}},
                                            'country'     : {{customer_address.country | json}},
                                            'phone'       : {{customer_address.phone | json}},
                                            'totalOrders' : {{customer.orders_count | json}},
                                            'totalSpent'  : {{customer.total_spent | money_without_currency | remove: "," | json}}
                                        },
                                        {% else %}
                                        'logState' : "Logged Out",
                                        {% endif %}
                                        {% endif %}
                                        'firstLog'      : firstLog,
                                        'customerEmail' : {{customer.email | json}},
                                        'timestamp'     : Date.now(),  
                                        {% if customer.orders_count > 2 %}
                                        'customerType'       : 'Returning',
                                        'customerTypeNumber' : '0',
                                        {% else %}
                                        'customerType'       : 'New',
                                        'customerTypeNumber' :'1', 
                                        {% endif %}
                                        'shippingInfo' : {
                                            'fullName'  : {{checkout.shipping_address.name | json}},
                                            'firstName' : {{checkout.shipping_address.first_name | json}},
                                            'lastName'  : {{checkout.shipping_address.last_name | json}},
                                            'address1'  : {{checkout.shipping_address.address1 | json}},
                                            'address2'  : {{checkout.shipping_address.address2 | json}},
                                            'street'    : {{checkout.shipping_address.street | json}},
                                            'city'      : {{checkout.shipping_address.city | json}},
                                            'province'  : {{checkout.shipping_address.province | json}},
                                            'zip'       : {{checkout.shipping_address.zip | json}},
                                            'country'   : {{checkout.shipping_address.country | json}},
                                            'phone'     : {{checkout.shipping_address.phone | json}},
                                        },
                                        'billingInfo' : {
                                            'fullName'  : {{checkout.billing_address.name | json}},
                                            'firstName' : {{checkout.billing_address.first_name | json}},
                                            'lastName'  : {{checkout.billing_address.last_name | json}},
                                            'address1'  : {{checkout.billing_address.address1 | json}},
                                            'address2'  : {{checkout.billing_address.address2 | json}},
                                            'street'    : {{checkout.billing_address.street | json}},
                                            'city'      : {{checkout.billing_address.city | json}},
                                            'province'  : {{checkout.billing_address.province | json}},
                                            'zip'       : {{checkout.billing_address.zip | json}},
                                            'country'   : {{checkout.billing_address.country | json}},
                                            'phone'     : {{checkout.billing_address.phone | json}},
                                        },
                                        'checkoutEmail' : {{checkout.email | json}},
                                        'currency'      : {{shop.currency | json}},
                                        'pageType'      : 'Log State',
                                        'event'         : 'Log State',
                                        'value'         : {{cart.total_price| times: 0.01}},
                                        'items': [
                                            {% for item in cart.items %}
                                                {
                                                'item_id': '{{item.id}}',
                                                'item_sku': '{{item.sku}}',
                                                'item_name': '{{item.title}}',
                                                'quantity': '{{item.quantity}}',
                                                'currency'      : {{shop.currency | json}},
                                                'price': '{{ item.price | times: 0.01 }}',
                                                'brand'           : {{shop.name | json}},
                                                'item_variant': '{{ item.variant_id }}',
                                                },
                                            {% endfor %}
                                        ]
                                    }
                                }
                                dataLayer.push(logState,{
                                    'pageType' : 'Cart',
                                    'event'    : 'view_cart'
                                });
                            {% endif %}
                            
                            /** DATALAYER: All Pages
                            * Fire all pages trigger after all additional dataLayers have loaded. */
                            
                            dataLayer.push({
                                'event': 'DataLayer Loaded'
                            });
                            
                            console.log('DATALAYER: DataLayer Loaded.');
                            
                            /**********************
                            * DATALAYER EVENT BINDINGS
                            ***********************/
                            
                            /** DATALAYER: 
                            * Add to Cart / Dynamic Cart View
                            * Fire all pages trigger after all additional dataLayers have loaded. */
                            
                            $(document).ready(function() {
                                
                                // add to cart
                                jQuery.getJSON('/cart.js', function (response) {
                                    // get Json response 
                                    __DL__.cart = response;
                                    var cart = {
                                        'products': __DL__.cart.items.map(function (line_item) {
                                            return {
                                                'id'       : line_item.id,
                                                'sku'      : line_item.sku,
                                                'variant'  : line_item.variant_id,
                                                'name'     : line_item.title,
                                                'price'    : (line_item.price/100),
                                                'quantity' : line_item.quantity
                                            }
                                        })
                                    }
                                    __DL__.cart = cart;
                                    collection_cartIDs = [];
                                    collection_matchIDs = [];
                                    collection_addtocart = [];
                                    for (var i = __DL__.cart.products.length - 1; i >= 0; i--) {
                                        var x = parseFloat(__DL__.cart.products[i].variant);
                                        collection_cartIDs.push(x);
                                    }
                                });
                                
                                function __DL__addtocart(){
                                    
                                    dataLayer.push(product, {
                                        'pageType' : 'Add to Cart',
                                        'event'    : 'add_to_cart'
                                    });
                                          
                                }
                                
                                $(document).on('click', __DL__.cartTriggers, function() {
                                    __DL__addtocart();
                                });
                            });
                        }
                    }, 500);
                </script>